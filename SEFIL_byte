-- Combined Camera Lock-On and Sprint Speed Script with Persistent GUI

local player = game.Players.LocalPlayer
local mouse = player:GetMouse()
local camera = game.Workspace.CurrentCamera
local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")
local Players = game:GetService("Players")
local playerGui = player:WaitForChild("PlayerGui")

-- Default values for sprinting
local isSprinting = false
local sprintSpeed = 50 -- Default sprint speed
local defaultSpeed = 16 -- Default Roblox walk speed
local sprintKey = Enum.KeyCode.LeftShift -- Default sprint key
local guiToggleKey = Enum.KeyCode.RightControl -- Key to toggle the GUI visibility

local keybinds = {
    LockOnKey = Enum.KeyCode.E, -- Default key for Lock On
    UnlockKey = Enum.KeyCode.Q -- Default key for Unlock
}

local lockedPlayer = nil -- Variable to hold the currently locked player

-- GUI variables
local screenGui
local guiFrame
local fovCircle

-- Create a ScreenGui for keybinds and sprint settings
local function createGUI()
    if screenGui then
        screenGui:Destroy() -- Destroy existing GUI to recreate
    end

    screenGui = Instance.new("ScreenGui", playerGui)
    screenGui.Name = "CombinedGui"
    screenGui.ResetOnSpawn = false

    -- Create a Frame for the GUI
    guiFrame = Instance.new("Frame", screenGui)
    guiFrame.Size = UDim2.new(0, 300, 0, 300)
    guiFrame.Position = UDim2.new(1, -320, 0.5, -150) -- Middle right position
    guiFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark background
    guiFrame.Visible = false -- Start with the GUI hidden

    -- Create a TextLabel for the sprint speed display
    local speedLabel = Instance.new("TextLabel", guiFrame)
    speedLabel.Size = UDim2.new(1, 0, 0, 50)
    speedLabel.Position = UDim2.new(0, 0, 0, 0)
    speedLabel.Text = "Sprint Speed: " .. sprintSpeed
    speedLabel.TextColor3 = Color3.new(1, 1, 1)
    speedLabel.BackgroundTransparency = 1

    -- Create a Slider for speed adjustment
    local sliderFrame = Instance.new("Frame", guiFrame)
    sliderFrame.Size = UDim2.new(1, 0, 0, 50)
    sliderFrame.Position = UDim2.new(0, 0, 0, 60)
    sliderFrame.BackgroundColor3 = Color3.new(0.5, 0.5, 0.5)

    local sliderButton = Instance.new("TextButton", sliderFrame)
    sliderButton.Size = UDim2.new(0, 20, 1, 0)
    sliderButton.Position = UDim2.new(0, 0, 0, 0)
    sliderButton.Text = ""
    sliderButton.BackgroundColor3 = Color3.new(1, 0, 0)

    -- Create Keybind buttons
    local lockKeyButton = Instance.new("TextButton", guiFrame)
    lockKeyButton.Size = UDim2.new(1, 0, 0, 50)
    lockKeyButton.Position = UDim2.new(0, 0, 0, 120)
    lockKeyButton.Text = "Lock On Key: " .. keybinds.LockOnKey.Name
    lockKeyButton.BackgroundColor3 = Color3.new(1, 0, 0)

    local unlockKeyButton = Instance.new("TextButton", guiFrame)
    unlockKeyButton.Size = UDim2.new(1, 0, 0, 50)
    unlockKeyButton.Position = UDim2.new(0, 0, 0, 180)
    unlockKeyButton.Text = "Unlock Key: " .. keybinds.UnlockKey.Name
    unlockKeyButton.BackgroundColor3 = Color3.new(0, 0, 1)

    -- Create a Keybind button for changing the slider keybind
    local sliderKeyButton = Instance.new("TextButton", guiFrame)
    sliderKeyButton.Size = UDim2.new(1, 0, 0, 50)
    sliderKeyButton.Position = UDim2.new(0, 0, 0, 240)
    sliderKeyButton.Text = "Slider Key: " .. sprintKey.Name
    sliderKeyButton.BackgroundColor3 = Color3.new(0, 1, 0) -- Green color

    -- FOV Circle
    fovCircle = Instance.new("Frame", screenGui)
    fovCircle.Size = UDim2.new(0, 100, 0, 100) -- Adjust size for FOV
    fovCircle.Position = UDim2.new(0, 0, 0, 0)
    fovCircle.AnchorPoint = Vector2.new(0.5, 0.5) -- Center the circle
    fovCircle.BackgroundColor3 = Color3.new(1, 1, 1)
    fovCircle.BackgroundTransparency = 1 -- Make background transparent
    fovCircle.BorderSizePixel = 0
    fovCircle.ZIndex = 10

    -- Add a UIStroke for the outline effect
    local uiStroke = Instance.new("UIStroke", fovCircle)
    uiStroke.Thickness = 2
    uiStroke.Color = Color3.new(1, 1, 1) -- White outline color
    uiStroke.LineJoinMode = Enum.LineJoinMode.Round -- Make the edges smooth

    -- Set the corner radius to make it circular
    fovCircle.Size = UDim2.new(0, 100, 0, 100)
    local cornerRadius = Instance.new("UICorner", fovCircle)
    cornerRadius.CornerRadius = UDim.new(0, 50) -- Makes it a perfect circle

    -- Function to update speed based on slider position
    local function updateSpeed()
        local sliderValue = sliderButton.Position.X.Scale
        sprintSpeed = math.floor(sliderValue * 100) -- Convert slider position to speed
        speedLabel.Text = "Sprint Speed: " .. sprintSpeed -- Update speed display
    end

    -- Dragging functionality for the slider
    sliderButton.MouseButton1Down:Connect(function()
        local dragConnection
        dragConnection = rs.RenderStepped:Connect(function()
            local mousePos = uis:GetMouseLocation().X - sliderFrame.AbsolutePosition.X
            local clampedX = math.clamp(mousePos, 0, sliderFrame.AbsoluteSize.X)
            local sliderPercent = clampedX / sliderFrame.AbsoluteSize.X
            sliderButton.Position = UDim2.new(sliderPercent, 0, 0, 0)
            updateSpeed()
        end)

        uis.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragConnection:Disconnect()
            end
        end)
    end)

    -- Click to change the lock keybind
    lockKeyButton.MouseButton1Click:Connect(function()
        lockKeyButton.Text = "Press a key..."
        local keyPressConnection
        keyPressConnection = uis.InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            keybinds.LockOnKey = input.KeyCode
            lockKeyButton.Text = "Lock On Key: " .. keybinds.LockOnKey.Name
            keyPressConnection:Disconnect()
        end)
    end)

    -- Click to change the unlock keybind
    unlockKeyButton.MouseButton1Click:Connect(function()
        unlockKeyButton.Text = "Press a key..."
        local keyPressConnection
        keyPressConnection = uis.InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            keybinds.UnlockKey = input.KeyCode
            unlockKeyButton.Text = "Unlock Key: " .. keybinds.UnlockKey.Name
            keyPressConnection:Disconnect()
        end)
    end)

    -- Click to change the slider keybind
    sliderKeyButton.MouseButton1Click:Connect(function()
        sliderKeyButton.Text = "Press a key..."
        local keyPressConnection
        keyPressConnection = uis.InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            sprintKey = input.KeyCode
            sliderKeyButton.Text = "Slider Key: " .. sprintKey.Name
            keyPressConnection:Disconnect()
        end)
    end)

    -- CFrame sprinting mechanism
    rs.RenderStepped:Connect(function()
        local character = player.Character or player.CharacterAdded:Wait()
        local humanoid = character:WaitForChild("Humanoid")
        local walkSpeed = isSprinting and sprintSpeed or defaultSpeed
        humanoid.WalkSpeed = walkSpeed -- Set the character's speed

        -- Update FOV circle position to follow the mouse
        fovCircle.Position = UDim2.new(0, mouse.X, 0, mouse.Y)

        -- Lock camera to the locked player without leaving the player's position
        if lockedPlayer and lockedPlayer.Character then
            local targetPosition = lockedPlayer.Character.HumanoidRootPart.Position
            camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition) -- Face the locked player
        end
    end)
end

-- Function to predict the target's future position based on ping
local function predictTargetPosition(targetCharacter)
    if not targetCharacter or not targetCharacter:FindFirstChild("HumanoidRootPart") then
        return nil
    end

    local targetPosition = targetCharacter.HumanoidRootPart.Position
    local ping = Players.LocalPlayer:GetNetworkPing()
    local bulletTravelTime = (targetPosition - camera.CFrame.Position).Magnitude / 100 -- Assuming bullet speed defined
    local predictedPosition = targetPosition + (targetCharacter.HumanoidRootPart.Velocity * (ping / 1000 + bulletTravelTime))

    return predictedPosition
end

-- Function to check if a position is in FOV
local function isInFov(targetPosition)
    local fovRadius = 50 -- FOV radius, adjust as needed
    local mousePosition = Vector3.new(mouse.Hit.p.X, mouse.Hit.p.Y, mouse.Hit.p.Z)
    local distance = (mousePosition - targetPosition).Magnitude
    return distance <= fovRadius
end

-- Function to lock onto the nearest player within the FOV
local function lockOntoPlayer()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local targetPosition = otherPlayer.Character.HumanoidRootPart.Position
            if isInFov(targetPosition) then
                local distance = (camera.CFrame.Position - targetPosition).Magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    closestPlayer = otherPlayer
                end
            end
        end
    end

    if closestPlayer then
        lockedPlayer = closestPlayer -- Set locked player
    end
end

-- Function to unlock the camera view
local function unlockPlayer()
    lockedPlayer = nil -- Clear the locked player
    camera.CameraType = Enum.CameraType.Custom -- Set camera back to custom
end

-- Input handling for locking, unlocking, and GUI toggle
uis.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == keybinds.LockOnKey then
        lockOntoPlayer() -- Lock onto player
    elseif input.KeyCode == keybinds.UnlockKey then
        unlockPlayer() -- Unlock camera view
    elseif input.KeyCode == guiToggleKey then
        guiFrame.Visible = not guiFrame.Visible -- Toggle GUI visibility
    end

    -- Sprint toggle
    if input.KeyCode == sprintKey then
        isSprinting = not isSprinting
    end
end)

-- Function to handle respawn
local function onRespawn()
    createGUI() -- Recreate the GUI on respawn
end

-- Create the GUI when the player joins the game
createGUI()

-- Connect the respawn function
player.CharacterAdded:Connect(onRespawn)

-- Reset to default speed upon respawn
player.CharacterAdded:Connect(function()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = defaultSpeed -- Reset speed
end)

-- Set initial speed for the character
local function setInitialSpeed()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    humanoid.WalkSpeed = defaultSpeed -- Set default walk speed
end

setInitialSpeed()
